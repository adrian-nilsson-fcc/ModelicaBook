#
msgid ""
msgstr ""
"Project-Id-Version: Modelica by Example v0.3.6\n"
"Report-Msgid-Bugs-To: mail@modelica.co.kr\n"
"POT-Creation-Date: 2023-01-28 22:37+0000\n"
"PO-Revision-Date: 2023-03-12 22:37+0000\n"
"Last-Translator: Baek Youngjin, mail@modelica.co.kr / Ha HyeonSu, <iloveyou934671@gmail.com>\n"
"Language-Team: modelica.co.kr <mail@modelica.co.k>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"


#: ../../source/components/connectors/annotations.rst:4
msgid "Graphical Annotations"
msgstr ""
"그래픽 주석(Graphical Annotations)"

#: ../../source/components/connectors/annotations.rst:6
msgid ""
"Although this section appears in the chapter on :ref:`connectors`, this "
"topic applies to graphical annotations associated with model definitions in "
"general.  So the information presented here will be a useful reference with "
"respect to many aspects of Modelica."
msgstr ""
":ref:`connectors` 를 지금 다루고 있지만, 여기서는 일반적인 모델 정의와 관련된 그래픽 주석을 다루겠습니다."
"따라서 여기에 제시된 정보는 모델리카와 관련한 여러 부분에서 유용한 참고 자료가 될 것입니다."


#: ../../source/components/connectors/annotations.rst:12
msgid "Graphical Layers"
msgstr ""
"그래픽 레이어(Graphical Layers)"

#: ../../source/components/connectors/annotations.rst:14
msgid ""
"When describing the appearance of a Modelica entity, there are two different"
" representations to choose from.  One is called the \"icon\" representation "
"and the other is called the \"diagram\" representation. In Modelica, the "
"icon representation is used when viewing something from the \"outside\".  "
"Generally, the icon includes some distinctive visual representation along "
"with additional information about that entity added via :ref:`substitutions`"
" (which we will be covering shortly)."
msgstr ""
"모델리카 엔터티의 모양을 설명할 때 선택할 수 있는 두 가지 표현이 있습니다. "
"하나는 "아이콘" 표현이라고 하고 다른 하나는 "다이어그램" 표현이라고 합니다."
"모델리카에서 아이콘 표현은 "외부"에서 무언가를 볼 때 사용합니다. "
"일반적으로 대체 항목(곧 다룰 예정임)을 통해 해당 엔티티에 대한 추가 정보와 함께 몇 가지 독특한 시각적 표현이 아이콘에 포함됩니다."


#: ../../source/components/connectors/annotations.rst:23
msgid ""
"The \"diagram\" representation, on the other hand, is used to represent the "
"view of a component from the \"inside\".  The diagram representation is "
"generally used to include additional graphical documentation about the "
"Modelica component that would be too detailed for the \"icon\" view."
msgstr ""
"반면에 "다이어그램" 표현은 "내부"에서 구성 요소의 보기를 나타내는 데 사용합니다."
"다이어그램 표현은 일반적으로 "아이콘" 보기에 비해서는 매우 자세한 모델리카 구성 요소에 대한 추가 그래픽 문서를 포함하는 데 사용합니다."


#: ../../source/components/connectors/annotations.rst:28
msgid ""
"A definition's graphical appearance in an \"icon\" layer is specified by the"
" ``Icon`` annotation (briefly touched on in our :ref:`graphical-connectors` "
"discussion earlier).  Not surprisingly, a definition's graphical appearance "
"in the \"diagram\" layer is specified by the ``Diagram`` annotation.  Both "
"of these are annotations that appear directly in the definition and are not "
"associated with existing elements like declarations or ``extends`` clauses."
msgstr ""
"이전의 :ref:`graphical-connectors` 에서 간략히 다루었듯이, "아이콘" 계층에서 정의의 그래픽 모양은 ``Icon`` 주석에 의해 지정됩니다."
"당연히 "다이어그램" 계층에서 정의의 그래픽 모양은 ``Diagram`` 주석에 의해 지정됩니다. "
"둘 다 정의에 직접 나타나는 주석이며, 선언 또는 ``extends`` 절과 같은 기존 요소와 연결되지 않습니다."



#: ../../source/components/connectors/annotations.rst:36
msgid ""
"Generally speaking, most definitions include an \"icon\" representation, but"
" only a few bother to include a \"diagram\" representation.  However, it "
"turns out that despite being rendered in different contexts, the "
"specification of graphical appearance is identical between them."
msgstr ""
"일반적으로 대부분의 정의에는 "아이콘" 표현을 사용하고 있으며, "다이어그램" 표현의 경우는 일부만 사용합니다."
"두가지 표현은 서로 다른 맥락에서 그리는 것이지만 그래픽 모양에 대한 사양은 서로 동일합니다."

#: ../../source/components/connectors/annotations.rst:0
msgid "Use of ``Icon`` in examples"
msgstr ""
"예제에서 ``Icon`` 사용(Use of ``Icon`` in examples)"

#: ../../source/components/connectors/annotations.rst:43
msgid ""
"For the remainder of the book, we will show examples of graphical "
"annotations using the ``Icon`` annotation.  These examples could equally be "
"applied to a ``Diagram`` annotation, but since the ``Icon`` annotation is "
"more common, all further examples regarding graphical annotations will "
"appear exclusively in the context of the ``Icon`` annotation."
msgstr ""
"이 책의 나머지 부분에서는 ``Icon`` 주석을 사용하여 그래픽 주석의 예를 보여드리겠습니다. "
"이러한 예제는 ``Diagram`` 주석에 동일하게 적용될 수 있지만 ``Icon`` 주석이 더 일반적이므로"
"그래픽 주석과 관련된 모든 추가 예제는 ``Icon`` 주석의 컨텍스트에서만 나타납니다."


#: ../../source/components/connectors/annotations.rst:51
msgid "Common Graphical Definitions"
msgstr ""
"공통의 그래픽 정의(Common Graphical Definitions)"

#: ../../source/components/connectors/annotations.rst:53
msgid "The following definitions will be referenced throughout this section:"
msgstr ""
"이 섹션 전체에서 다음과 같은 정의가 참조됩니다."

#: ../../source/components/connectors/annotations.rst:82
msgid ""
"In addition, many of the annotations we will be discussing include a set of "
"common elements represented by the following ``record`` definition:"
msgstr ""
"또한  논의할 많은 주석에는 다음 ``record`` 정의로 표현되는 일련의 공통 요소가 포함됩니다."

#: ../../source/components/connectors/annotations.rst:94
msgid ""
"For annotations representing graphical elements, we will extend from this "
"``GraphicItem`` to make the presence of these common elements explicitly "
"clear."
msgstr ""
"공통 요소의 존재를 명시적으로 명확하게 만들기 위해  이 ``GraphicItem`` 으로 그래픽 요소를 나타내는 주석을 확장(extend) 하겠습니다."

#: ../../source/components/connectors/annotations.rst:99
msgid "``Icon`` and ``Diagram`` Annotations"
msgstr ""
"``아이콘`` 그리고 ``다이어그램`` 주석(``Icon`` and ``Diagram`` Annotations)"

#: ../../source/components/connectors/annotations.rst:101
msgid ""
"The elements that should appear in the icon layer of a model are described "
"by the following data:"
msgstr ""
"모델의 아이콘 레이어에 나타나야 하는 요소는 다음 데이터로 설명할 수 있습니다."

#: ../../source/components/connectors/annotations.rst:111
msgid "where the coordinate system data is defined as:"
msgstr ""
"여기서 좌표계 데이터는 다음과 같이 정의합니다."

#: ../../source/components/connectors/annotations.rst:122
msgid ""
"In other words, the ``Icon`` annotation includes information about the "
"coordinate system contained in the definition of ``coordinateSystem`` and it"
" also includes a list of graphical items stored in ``graphics``.  The "
"definition of the ``Diagram`` annotation is identical:"
msgstr ""
"즉, ``Icon`` 주석에는 ``coordinateSystem`` 정의에 포함된 좌표계에 대한 정보가 포함되며 ``graphics`` 에 저장된 그래픽 항목 목록도 포함됩니다."
"``Diagram`` 주석의 정의는 동일합니다:"

#: ../../source/components/connectors/annotations.rst:135
msgid "Graphical Items"
msgstr ""
"그래픽 아이템(Graphical Items)"

#: ../../source/components/connectors/annotations.rst:137
msgid ""
"There are a number of different graphical items that are defined in the "
"specification that can be used in constructing the ``graphics`` vector "
"associated with either the ``Icon`` or ``Diagram`` annotations.  Their "
"definitions are presented here for reference."
msgstr ""
"``Icon`` 또는 ``Diagram`` 주석과 관련된 ``graphics`` 벡터를 구성하기 위해 사용하는 모델리카 사양(spec)에 정의된 다양한 그래픽 항목이 있습니다."
"참고를 위해 아래 예시로 정의를 살펴 보겠습니다."


#: ../../source/components/connectors/annotations.rst:145
msgid "``Line``"
msgstr ""
"선(``Line``)"

#: ../../source/components/connectors/annotations.rst:163
msgid "``Polygon``"
msgstr ""
"다각형(``Polygon``)"

#: ../../source/components/connectors/annotations.rst:177
msgid "``Rectangle``"
msgstr ""
"사각형(``Rectangle``)"

#: ../../source/components/connectors/annotations.rst:192
msgid "``Ellipse``"
msgstr ""
"타원(``Ellipse``)"

#: ../../source/components/connectors/annotations.rst:207
msgid "``Text``"
msgstr ""
"문자(``Text``)"

#: ../../source/components/connectors/annotations.rst:226
msgid "``Bitmap``"
msgstr ""
"비트맵(``Bitmap``)"

#: ../../source/components/connectors/annotations.rst:238
msgid "Inheriting Graphical Annotations"
msgstr ""
"그래픽 주석 상속(Inheriting Graphical Annotations)"

#: ../../source/components/connectors/annotations.rst:240
msgid ""
"When one model definition inherits from another, the graphical annotations "
"are inherited by default.  However, this behavior can be controlled by "
"annotating the ``extends`` clause with the following data (for the icon and "
"diagram layers, respectively):"
msgstr ""
"한 모델 정의가 다른 모델 정의에서 상속되면 기본적으로 그래픽 주석이 상속됩니다. "
"그러나 이 동작은 다음 데이터로 ``extends`` 절에 주석을 달아 제어할 수 있습니다(각각 아이콘 및 다이어그램 레이어에 대해)."



#: ../../source/components/connectors/annotations.rst:257
msgid ""
"In both cases, the ``extent`` data allows the location of the inherited "
"graphical elements to be adjusted.  Setting ``primitivesVisible`` to "
"``false`` will suppress the rendering of inherited graphical elements."
msgstr ""
"두 경우 모두 ``extent`` 데이터를 통해 상속된 그래픽 요소의 위치를 조정할 수 있습니다. "
"``primitivesVisible`` 을 ``false`` 로 설정하면 상속된 그래픽 요소의 렌더링이 억제됩니다."


#: ../../source/components/connectors/annotations.rst:265
msgid "Substitutions"
msgstr ""
"치환(Substitutions)"

#: ../../source/components/connectors/annotations.rst:267
msgid ""
"When working with the :ref:`text-anno` annotation, the ``textString`` field "
"can contain substitution patterns.  The following substitution patterns are "
"supported:"
msgstr ""
":ref:`text-anno` 주석으로 작업 할때와 같이 ``textString`` 필드는 특정 대체 패턴을 사용할 수 있는데, 모델리카 에서는 다음 대체 패턴이 지원됩니다."

#: ../../source/components/connectors/annotations.rst:271
msgid ""
"``%name`` - This pattern will be replaced by the name of the instance of the"
" given definition."
msgstr ""
"``%name`` - 이 패턴은 주어진 정의의 인스턴스 이름으로 대체합니다."

#: ../../source/components/connectors/annotations.rst:273
msgid ""
"``%class`` - This pattern will be replaced by the name of this definition."
msgstr ""
"``%class`` - 이 패턴은 이 정의의 이름으로 대체합니다."

#: ../../source/components/connectors/annotations.rst:275
msgid ""
"``%<name>`` where ``<name>`` is a parameter name - This pattern will be "
"replaced by the **value** of the named parameter."
msgstr ""
"``%<name>`` 여기서 ``<name>`` 은 파라미터 이름 - 이 패턴은 명명된 파라미터의 **값** 으로 대체합니다."

#: ../../source/components/connectors/annotations.rst:277
msgid "``%%`` - This pattern will be replaced by ``%``."
msgstr ""
"``%%`` - 이 패턴은 ``%`` 로 대체합니다."

#: ../../source/components/connectors/annotations.rst:280
msgid "Putting It All Together"
msgstr ""
"종합하여 모음(Putting It All Together)"

#: ../../source/components/connectors/annotations.rst:282
msgid ""
"Having discussed all these aspects of graphical annotations, let us review "
"the icon definitions presented during our discussion of :ref:`graphical-"
"connectors`."
msgstr ""
"그래픽 주석의 전체를 다루었으므로, :ref:`graphical-connectors` 에서 앞서 다루면서 제시된 아이콘 정의를 모아서 살펴 보겠습니다."

#: ../../source/components/connectors/annotations.rst:290
msgid ""
"Here we see the ``annotation`` associated with the ``PositivePin`` "
"definition is a model annotation.  Furthermore, we can see the ``Icon`` data"
" associated with this annotation includes a list of graphical items.  The "
"first graphical item is an :ref:`ellipse-anno` annotation.  That is followed"
" by two :ref:`rect-anno` annotations and finally a :ref:`text-anno` (which "
"also makes use of the :ref:`substitutions` we discussed earlier)."
msgstr ""
"위에 보이는 예시에서  ``PositivePin`` 정의와 관련된 ``annotation`` 이 모델 주석이고, 이와 관련된 ``Icon`` 데이터에 그래픽 항목 목록이 포함되어 있다는 것을 알 수 있습니다. "
"첫 번째 그래픽 항목은 :ref:`ellipse-anno`  주석입니다. 그 다음에는 두 개의 :ref:`rect-anno` 주석과 마지막으로 (이전에 논의한 :ref:`substitutions` 에서도 사용하는) :ref:`text-anno` 가 있습니다."



#: ../../source/components/connectors/annotations.rst:298
msgid ""
"Note how the data being presented in this ``annotation`` lines up with the "
"data described in the record definitions we discussed earlier."
msgstr ""
"이 ``annotation`` 에 표시되는 데이터가 앞에서 논의한 레코드 정의에 설명된 데이터와 어떻게 일치하는지 살펴 볼 수 있습니다."

