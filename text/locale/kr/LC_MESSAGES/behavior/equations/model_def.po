#
msgid ""
msgstr ""
"Project-Id-Version: Modelica by Example v0.3.6\n"
"Report-Msgid-Bugs-To: mail@modelica.co.kr\n"
"POT-Creation-Date: 2023-01-28 22:37+0000\n"
"PO-Revision-Date: 2023-03-12 22:37+0000\n"
"Last-Translator: Baek Youngjin, mail@modelica.co.kr / Ha HyeonSu, <iloveyou934671@gmail.com>\n"
"Language-Team: modelica.co.kr <mail@modelica.co.k>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"


#: ../../source/behavior/equations/model_def.rst:4
msgid "Model Definition"
msgstr ""
"모델의 정의(Model Definition)"

#: ../../source/behavior/equations/model_def.rst:6
msgid ""
"A ``model`` definition is the most generic type of definition in "
"Modelica.  Later in the book (and even in this chapter), we'll be "
"introducing other types of definitions (*e.g.,* ``record`` definitions) "
"that share the same syntax as a ``model`` definition, but include some "
"restrictions on what the definition is allowed to contain."
msgstr ""
"``model`` 에 대한 정의는 모델리카에서 가장 일반적인 유형의 정의입니다. "
"이 책의 뒷부분에서(심지어 이 장에서도) ``model`` 정의와 동일한 구문을 사용하지만 정의에 포함될 수 있는 항목이 제한되는 다른 유형의 정의(*예:* ``record`` 정의)를 소개할 것입니다. "


#: ../../source/behavior/equations/model_def.rst:13
msgid "Syntax of a Model Definition"
msgstr ""
"모델 정의의 문법(Syntax of a Model Definition)"

#: ../../source/behavior/equations/model_def.rst:17
msgid ""
"As we saw throughout this chapter, a model definition starts with the "
"``model`` keyword and is followed by a model name (and optionally a model"
" description).  The name of the model must start with a letter and can be"
" followed by any collection of letters, numbers or underscores (``_``)."
msgstr ""
"이 장에서 보았듯이 모델 정의는 ``model`` 키워드로 시작하고 모델 이름(및 선택적으로 모델에 대한 설명)이 뒤따릅니다. "
"모델 이름은 문자로 시작해야 하며 그 뒤에 문자, 숫자 또는 밑줄(``_``) 모음이 올 수 있습니다."


msgid "Naming conventions"
msgstr ""
"네이밍 규칙(Naming conventions)"

#: ../../source/behavior/equations/model_def.rst:27
msgid ""
"Although not strictly required by the language.  It is a convention that "
"**model names start with an upper case letter**.  Most model developers "
"use the so-called \"camel case\" convention where the first letter of "
"each word in the model name is upper case."
msgstr ""
"언어에서 엄격하게 요구되는 것은 아니지만. **모델명은 대문자로 시작하는 것이 관례입니다**"
"대부분의 모델 개발자는 모델 이름의 각 단어의 첫 글자가 대문자인 소위 "camel case-카멜 케이스" 규칙을 사용합니다."
 
#: ../../source/behavior/equations/model_def.rst:32
msgid ""
"The model definition can contain variables and equations (to be discussed"
" shortly).  The end of the model is indicated by the presence of the "
"``end`` keyword followed by a repetition of the model name. Any text "
"appearing after the sequence ``//`` and until the end of the line or "
"between the delimiters ``/*`` and ``*/`` is considered a comment."
msgstr ""
"모델 정의에는 변수와 방정식이 포함될 수 있습니다(곧 논의하겠음). "
"모델의 끝은 ``end`` 키워드와 모델 이름의 반복으로 표시됩니다. "
"각각의 구문 뒤에 나타나는 ``//`` 뒤와 줄 끝까지 또는 구분 기호 ``/*`` 와 ``*/`` 사이에 나타나는 모든 텍스트는 주석으로 간주됩니다."



#: ../../source/behavior/equations/model_def.rst:39
msgid "In summary, a model definition has the following general form:"
msgstr ""
"요약하면 모델 정의의 일반적인 형식은 다음과 같습니다."

#: ../../source/behavior/equations/model_def.rst:52
msgid "Inheritance"
msgstr ""
"상속(Inheritance)"

#: ../../source/behavior/equations/model_def.rst:57
msgid ""
"As we saw in the section on :ref:`avoiding-repetition`, we can reuse code"
" from other models by adding an ``extends`` clause to the model.  It is "
"worth noting that a model definition can include multiple ``extends`` "
"clauses."
msgstr ""
":ref:`avoiding-repetition` 섹션에서 본 것처럼 모델에 ``extends`` 절을 추가하여 다른 모델의 코드를 재사용할 수 있습니다. "
"모델 정의에 여러 ``extends`` 절이 포함될 수 있다는 점은 주목할 필요가 있습니다."

#: ../../source/behavior/equations/model_def.rst:62
msgid ""
"Each ``extends`` clause must include the name of the model being extended"
" from and can be optionally followed by modifications that are applied to"
" the contents of the model being extended from.  In the case of a model "
"definition that inherits from other model definitions, you can think of "
"the general syntax as looking something like this:"
msgstr ""
"각 ``extends`` 절은 확장되는 모델의 이름을 포함해야 하며 선택적으로 확장되는 모델의 내용에 적용되는 수정이 뒤따를 수 있습니다. "
"다른 모델 정의에서 상속되는 모델에 대한 정의는 일반적으로 구문을 다음과 같이 생각할 수 있습니다."


#: ../../source/behavior/equations/model_def.rst:78
msgid ""
"By convention, ``extends`` clauses are normally listed at the very top of"
" the model definition, before any variables."
msgstr ""
"관례에 따라 ``extends`` 절은 일반적으로 모델 정의의 맨 위에, 변수보다 먼저 나열됩니다."


#: ../../source/behavior/equations/model_def.rst:81
msgid ""
"In later chapters, we will show how this same syntax can be used to "
"define other entities besides models.  But for now, we will focus "
"primarily on models."
msgstr ""
"이후 장에서는 동일한 구문을 사용하여, 모델 외에 다른 엔터티를 정의하는 방법을 보여줍니다. "
"그러나, 지금은 주로 모델에 초점을 맞추었습니다."


#~ msgid "model"
#~ msgstr ""

#~ msgid "camel case"
#~ msgstr ""

#~ msgid "inheritance"
#~ msgstr ""

#~ msgid "extends"
#~ msgstr ""

